@* @page "/login"



<MudCard Style="width:500px; margin:10px auto; margin-top:30px;">
    <MudCardHeader Style="background-color:black; font-size:large; text-align:center" Color="Color.white">Login</MudCardHeader>
    <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!" />                                        
                <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!" />
                <MudTextField T="string"
                              Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                              Validation="@(new Func<string, string>(PasswordMatch))" />

                <div class="d-flex align-center justify-content-between">
                <MudButton Variant="Variant.Filled" Href="/">Back to</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Success" Disabled="@(!success)" Class="ml-auto">Login</MudButton>
                </div>
            </MudForm>
    </MudCardContent>
</MudCard>




@code {
    bool success;
    string[] errors = { };
    MudTextField<string>? pwField1;
    MudForm? form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
           yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
           yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
           yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
           yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }

} *@