@page "/playerStatistic/Add"


@inject HttpClient http
@inject ISnackbar snackbar;


<MudCard Class="card-f" Style="width: 60%; margin-top:40px; margin: 10px auto; background-color:lightpink">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText style="text-align:center; outline-color:lightcoral" Typo="Typo.h6">Add new Player Statistics</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@playerStatictics" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <div style="display: flex; flex-wrap: wrap; justify-content: space-between; margin-bottom: 16px;">
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudSelect @ref="mudSelectPlayer" @bind-Value="playerStatictics.PlayerId" T="int" Label="Player" Variant="Variant.Text">
                        @if (this.players is not null)
                        {
                            @foreach (var item in players)
                            {
                                <MudSelectItem Value="@item.PlayerId">@item.PlayerName</MudSelectItem>
                            }
                        }
                        <MudSelectItem Value="0">Select one</MudSelectItem>
                    </MudSelect>
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Matchs" @bind-Value="playerStatictics.Matches " For="@(() => playerStatictics.Matches)" />
                    
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Innings" @bind-Value="playerStatictics.Innings " For="@(() => playerStatictics.Innings )" />
                    <MudTextField Label="Runs" @bind-Value="playerStatictics.Runs " For="@(()=>playerStatictics.Runs )" />
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Balls"
                                  @bind-Value="playerStatictics.Balls " For="@(() => playerStatictics.Balls )" />
                    <MudTextField Label="Average"
                                  @bind-Value="playerStatictics.Average " For="@(()=>playerStatictics.Average )" />
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Fifty"
                                  @bind-Value="playerStatictics.Fifty " For="@(() => playerStatictics.Fifty )" />
                    <MudTextField Label="Hundred"
                                  @bind-Value="playerStatictics.Hundred " For="@(()=>playerStatictics.Hundred )" />
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Sixs"
                                  @bind-Value="playerStatictics.Sixs " For="@(() => playerStatictics.Sixs )" />
                    <MudTextField Label="Fours"
                                  @bind-Value="playerStatictics.Fours " For="@(()=>playerStatictics.Fours )" />
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Highest"
                                  @bind-Value="playerStatictics.Highest " For="@(() => playerStatictics.Highest )" />
                    <MudTextField Label="Ducks"
                                  @bind-Value="playerStatictics.Ducks " For="@(()=>playerStatictics.Ducks )" />
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Wicket"
                                  @bind-Value="playerStatictics.Wicket " For="@(() => playerStatictics.Wicket )" />
                    <MudTextField Label="Maidensd"
                                  @bind-Value="playerStatictics.Maidens " For="@(()=>playerStatictics.Maidens )" />
                </div>
                <div style="width: 48%; margin-bottom: 16px;">
                    <MudTextField Label="Economy"
                                  @bind-Value="playerStatictics.Economy " For="@(() => playerStatictics.Economy )" />
                   
                </div>
            </div>
            <div style="display: flex; justify-content: space-between; padding-top: 10px;">
                <MudButton Variant="Variant.Filled" Href="/playerStatistic" Color="Color.Dark">Back to</MudButton>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Save</MudButton>
            </div>
        </EditForm>
    </MudCardContent>
</MudCard>
@code {
    private PlayerStatistic playerStatictics = new PlayerStatistic();

    private List<Player>? players;
    MudSelect<int> mudSelectPlayer = null!;

    protected override async Task OnInitializedAsync()
    {
        players = await http.GetFromJsonAsync<List<Player>>("api/PlayerStatistics/Players");
    }

    private async void HandleValidSubmit(EditContext editContext)
    {

        await this.Save();

    }
    private async Task Save()
    {
        var response = await this.http.PostAsJsonAsync<PlayerStatistic>("/api/PlayerStatistics", this.playerStatictics);
        if (response.IsSuccessStatusCode)
        {
            this.snackbar.Clear();
            this.snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
            this.snackbar.Add("Data saved.", Severity.Success);
            this.playerStatictics = new PlayerStatistic();
            this.StateHasChanged();
        }
        else
        {
            this.snackbar.Clear();
            this.snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
            this.snackbar.Add("Failed to save.", Severity.Warning);
        }
    }
}
