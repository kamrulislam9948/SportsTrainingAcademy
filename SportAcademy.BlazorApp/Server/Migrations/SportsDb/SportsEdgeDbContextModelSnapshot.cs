// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportAcademy.BlazorApp.Shared.Models;

#nullable disable

namespace SportAcademy.BlazorApp.Server.Migrations.SportsDb
{
    [DbContext(typeof(SportsEdgeDbContext))]
    partial class SportsEdgeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.AdvisorSpecialization", b =>
                {
                    b.Property<int>("AdvisorSpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvisorSpecializationId"));

                    b.Property<string>("AdvisorSpecializedIn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdvisorSpecializationId");

                    b.ToTable("AdvisorSpecializations");

                    b.HasData(
                        new
                        {
                            AdvisorSpecializationId = 2,
                            AdvisorSpecializedIn = "Orthopedics"
                        },
                        new
                        {
                            AdvisorSpecializationId = 3,
                            AdvisorSpecializedIn = "Nutrition"
                        },
                        new
                        {
                            AdvisorSpecializationId = 4,
                            AdvisorSpecializedIn = "Rehabilitation"
                        },
                        new
                        {
                            AdvisorSpecializationId = 5,
                            AdvisorSpecializedIn = "Sports Psychology"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Applicant", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicantId");

                    b.HasIndex("EventId");

                    b.ToTable("Applicants");

                    b.HasData(
                        new
                        {
                            ApplicantId = 1,
                            Address = "Dhaka",
                            DateOfBirth = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "applicant1@example.com",
                            EventId = 1,
                            Name = "Applicant 1",
                            PhoneNumber = "01742452645",
                            Picture = "applicant1.jpg"
                        },
                        new
                        {
                            ApplicantId = 2,
                            Address = "Barishal",
                            DateOfBirth = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "applicant2@example.com",
                            EventId = 2,
                            Name = "Applicant 2",
                            PhoneNumber = "01742452645",
                            Picture = "applicant2.jpg"
                        },
                        new
                        {
                            ApplicantId = 3,
                            Address = "Khula",
                            DateOfBirth = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "applicant3@example.com",
                            EventId = 3,
                            Name = "Applicant 3",
                            PhoneNumber = "01742452645",
                            Picture = "applicant3.jpg"
                        },
                        new
                        {
                            ApplicantId = 4,
                            Address = "Rajshahi",
                            DateOfBirth = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "applicant4@example.com",
                            EventId = 4,
                            Name = "Applicant 4",
                            PhoneNumber = "01742452645",
                            Picture = "applicant4.jpg"
                        },
                        new
                        {
                            ApplicantId = 5,
                            Address = "Rangpur",
                            DateOfBirth = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "applicant5@example.com",
                            EventId = 5,
                            Name = "Applicant 5",
                            PhoneNumber = "01742452645",
                            Picture = "applicant5.jpg"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            AttendanceId = 1,
                            Date = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IsPresent = true,
                            TrainingSessionId = 1
                        },
                        new
                        {
                            AttendanceId = 2,
                            Date = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IsPresent = true,
                            TrainingSessionId = 2
                        },
                        new
                        {
                            AttendanceId = 3,
                            Date = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IsPresent = true,
                            TrainingSessionId = 3
                        },
                        new
                        {
                            AttendanceId = 4,
                            Date = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IsPresent = true,
                            TrainingSessionId = 4
                        },
                        new
                        {
                            AttendanceId = 5,
                            Date = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            IsPresent = true,
                            TrainingSessionId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Professional"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Amateur"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Youth"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Senior"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Junior"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CoachName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CoachTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("JoinDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CoachId");

                    b.HasIndex("CoachTypeId");

                    b.ToTable("Coaches");

                    b.HasData(
                        new
                        {
                            CoachId = 1,
                            Address = "456 Oak Avenue",
                            CoachName = "Coach Smith",
                            CoachTypeId = 1,
                            Email = "coach.smith@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2275),
                            Phone = "987-654-3210",
                            Picture = "coach1.jpg"
                        },
                        new
                        {
                            CoachId = 2,
                            Address = "789 Maple Street",
                            CoachName = "Coach Johnson",
                            CoachTypeId = 2,
                            Email = "coach.johnson@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2290),
                            Phone = "123-456-7890",
                            Picture = "coach2.jpg"
                        },
                        new
                        {
                            CoachId = 3,
                            Address = "234 Birch Lane",
                            CoachName = "Coach Davis",
                            CoachTypeId = 3,
                            Email = "coach.davis@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2295),
                            Phone = "555-222-3333",
                            Picture = "coach3.jpg"
                        },
                        new
                        {
                            CoachId = 4,
                            Address = "567 Pine Road",
                            CoachName = "Coach Miller",
                            CoachTypeId = 4,
                            Email = "coach.miller@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2300),
                            Phone = "111-999-7777",
                            Picture = "coach4.jpg"
                        },
                        new
                        {
                            CoachId = 5,
                            Address = "890 Elm Avenue",
                            CoachName = "Coach Wilson",
                            CoachTypeId = 5,
                            Email = "coach.wilson@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2306),
                            Phone = "444-888-6666",
                            Picture = "coach5.jpg"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachSpecialization", b =>
                {
                    b.Property<int>("CoachSpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachSpecializationId"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("SpecializedIn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CoachSpecializationId");

                    b.HasIndex("CoachId");

                    b.ToTable("CoachSpecializations");

                    b.HasData(
                        new
                        {
                            CoachSpecializationId = 1,
                            CoachId = 1,
                            SpecializedIn = "Strategic Planning"
                        },
                        new
                        {
                            CoachSpecializationId = 2,
                            CoachId = 1,
                            SpecializedIn = "Player Development"
                        },
                        new
                        {
                            CoachSpecializationId = 3,
                            CoachId = 2,
                            SpecializedIn = "Tactics and Analysis"
                        },
                        new
                        {
                            CoachSpecializationId = 4,
                            CoachId = 3,
                            SpecializedIn = "Fitness Training"
                        },
                        new
                        {
                            CoachSpecializationId = 5,
                            CoachId = 4,
                            SpecializedIn = "Injury Rehabilitation"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachSport", b =>
                {
                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("CoachId", "SportId");

                    b.HasIndex("SportId");

                    b.ToTable("CoachSports");

                    b.HasData(
                        new
                        {
                            CoachId = 1,
                            SportId = 1
                        },
                        new
                        {
                            CoachId = 2,
                            SportId = 2
                        },
                        new
                        {
                            CoachId = 3,
                            SportId = 3
                        },
                        new
                        {
                            CoachId = 4,
                            SportId = 4
                        },
                        new
                        {
                            CoachId = 5,
                            SportId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachTeam", b =>
                {
                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("CoachId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("CoachTeams");

                    b.HasData(
                        new
                        {
                            CoachId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            CoachId = 2,
                            TeamId = 3
                        },
                        new
                        {
                            CoachId = 3,
                            TeamId = 4
                        },
                        new
                        {
                            CoachId = 4,
                            TeamId = 5
                        },
                        new
                        {
                            CoachId = 5,
                            TeamId = 6
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachType", b =>
                {
                    b.Property<int>("CoachTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachTypeId"));

                    b.Property<string>("CoachTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CoachTypeId");

                    b.ToTable("CoachTypes");

                    b.HasData(
                        new
                        {
                            CoachTypeId = 1,
                            CoachTypeName = "Head Coach"
                        },
                        new
                        {
                            CoachTypeId = 2,
                            CoachTypeName = "Assistant Coach"
                        },
                        new
                        {
                            CoachTypeId = 3,
                            CoachTypeName = "Trainer"
                        },
                        new
                        {
                            CoachTypeId = 4,
                            CoachTypeName = "Specialist"
                        },
                        new
                        {
                            CoachTypeId = 5,
                            CoachTypeName = "Analyst"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Sports Management",
                            Description = "Advanced course in sports management",
                            EndDate = new DateTime(2024, 6, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4530),
                            Semester = "Fall 2023",
                            StartDate = new DateTime(2023, 12, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4524)
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "Sports Nutrition",
                            Description = "Understanding nutrition for athletic performance",
                            EndDate = new DateTime(2024, 7, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4539),
                            Semester = "Fall 2023",
                            StartDate = new DateTime(2024, 2, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4536)
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Sports Psychology",
                            Description = "Psychological aspects of sports and performance",
                            EndDate = new DateTime(2024, 8, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4547),
                            Semester = "Fall 2023",
                            StartDate = new DateTime(2024, 3, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4546)
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "Sports Medicine",
                            Description = "Medical aspects of sports and athlete care",
                            EndDate = new DateTime(2024, 9, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4554),
                            Semester = "Fall 2023",
                            StartDate = new DateTime(2024, 4, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4550)
                        },
                        new
                        {
                            CourseId = 5,
                            CourseName = "Coaching Strategies",
                            Description = "Strategies for effective coaching in sports",
                            EndDate = new DateTime(2024, 10, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4563),
                            Semester = "Fall 2023",
                            StartDate = new DateTime(2024, 5, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4562)
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CricketFormat", b =>
                {
                    b.Property<int>("CricketFormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CricketFormatId"));

                    b.Property<string>("FormatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("CricketFormatId");

                    b.HasIndex("SportId");

                    b.ToTable("CricketFormats");

                    b.HasData(
                        new
                        {
                            CricketFormatId = 1,
                            FormatName = "T20",
                            SportId = 2
                        },
                        new
                        {
                            CricketFormatId = 2,
                            FormatName = "ODI",
                            SportId = 2
                        },
                        new
                        {
                            CricketFormatId = 3,
                            FormatName = "Test",
                            SportId = 2
                        },
                        new
                        {
                            CricketFormatId = 4,
                            FormatName = "T10",
                            SportId = 1
                        },
                        new
                        {
                            CricketFormatId = 5,
                            FormatName = "One-Hour",
                            SportId = 1
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            EquipmentId = 1,
                            EquipmentName = "Training Cones",
                            TrainingSessionId = 1
                        },
                        new
                        {
                            EquipmentId = 2,
                            EquipmentName = "Agility Ladders",
                            TrainingSessionId = 1
                        },
                        new
                        {
                            EquipmentId = 3,
                            EquipmentName = "Medicine Balls",
                            TrainingSessionId = 2
                        },
                        new
                        {
                            EquipmentId = 4,
                            EquipmentName = "Speed Hurdles",
                            TrainingSessionId = 3
                        },
                        new
                        {
                            EquipmentId = 5,
                            EquipmentName = "Resistance Bands",
                            TrainingSessionId = 4
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SelectionPanelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("SelectionPanelId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Description = "Intensive training for the upcoming season",
                            EndDate = new DateTime(2024, 1, 27, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4056),
                            EventName = "Training Camp",
                            Location = "Sports Complex",
                            ManagerId = 1,
                            Picture = "Fortuna Sittard.jpg",
                            SelectionPanelId = 1,
                            StartDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4048)
                        },
                        new
                        {
                            EventId = 2,
                            Description = "Building team cohesion and communication",
                            EndDate = new DateTime(2024, 2, 22, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4084),
                            EventName = "Team Building Workshop",
                            Location = "Conference Center",
                            ManagerId = 1,
                            Picture = "JMS CRICKET ACADEMY.jpg",
                            SelectionPanelId = 1,
                            StartDate = new DateTime(2024, 2, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4075)
                        },
                        new
                        {
                            EventId = 3,
                            Description = "Friendly match to assess team performance",
                            EndDate = new DateTime(2024, 3, 21, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4095),
                            EventName = "Scrimmage Match",
                            Location = "Stadium",
                            ManagerId = 1,
                            Picture = "Cricket Ground Equipment.jpg",
                            SelectionPanelId = 1,
                            StartDate = new DateTime(2024, 3, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4093)
                        },
                        new
                        {
                            EventId = 4,
                            Description = "Educating players on injury prevention techniques",
                            EndDate = new DateTime(2024, 4, 22, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4106),
                            EventName = "Injury Prevention Workshop",
                            Location = "Training Facility",
                            ManagerId = 1,
                            Picture = "Cricket Ground Equipment.jpg",
                            SelectionPanelId = 1,
                            StartDate = new DateTime(2024, 4, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4101)
                        },
                        new
                        {
                            EventId = 5,
                            Description = "Planning team strategies for the upcoming matches",
                            EndDate = new DateTime(2024, 5, 21, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4113),
                            EventName = "Team Strategy Session",
                            Location = "Team Meeting Room",
                            ManagerId = 1,
                            Picture = "Cricket Ground Equipment.jpg",
                            SelectionPanelId = 1,
                            StartDate = new DateTime(2024, 5, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(4111)
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<DateTime?>("ExamDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ExamResultId")
                        .HasColumnType("int");

                    b.Property<double?>("Result")
                        .HasColumnType("float");

                    b.HasKey("ExamId");

                    b.HasIndex("ExamResultId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            ExamDate = new DateTime(2024, 2, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(5324),
                            ExamName = "Sports Science",
                            ExamResultId = 1,
                            Result = 85.5
                        },
                        new
                        {
                            ExamId = 2,
                            ExamDate = new DateTime(2024, 3, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(5340),
                            ExamName = "Nutrition Fundamentals",
                            ExamResultId = 2,
                            Result = 92.299999999999997
                        },
                        new
                        {
                            ExamId = 3,
                            ExamDate = new DateTime(2024, 4, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(5348),
                            ExamName = "Psychological Assessment",
                            ExamResultId = 3,
                            Result = 78.900000000000006
                        },
                        new
                        {
                            ExamId = 4,
                            ExamDate = new DateTime(2024, 5, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(5354),
                            ExamName = "Sports Injury Management",
                            ExamResultId = 4,
                            Result = 89.099999999999994
                        },
                        new
                        {
                            ExamId = 5,
                            ExamDate = new DateTime(2024, 6, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(5363),
                            ExamName = "Coaching Philosophies",
                            ExamResultId = 5,
                            Result = 94.700000000000003
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamResult", b =>
                {
                    b.Property<int>("ExamResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamResultId"));

                    b.Property<string>("ExamTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PlayerStateDetailId")
                        .HasColumnType("int");

                    b.HasKey("ExamResultId");

                    b.HasIndex("PlayerStateDetailId");

                    b.ToTable("ExamResults");

                    b.HasData(
                        new
                        {
                            ExamResultId = 1,
                            ExamTitle = "Midterm Exam"
                        },
                        new
                        {
                            ExamResultId = 2,
                            ExamTitle = "Final Exam"
                        },
                        new
                        {
                            ExamResultId = 3,
                            ExamTitle = "Practical Assessment"
                        },
                        new
                        {
                            ExamResultId = 4,
                            ExamTitle = "Research Project"
                        },
                        new
                        {
                            ExamResultId = 5,
                            ExamTitle = "Case Study Presentation"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamType", b =>
                {
                    b.Property<int>("ExamTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExamTypeId");

                    b.ToTable("ExamTypes");

                    b.HasData(
                        new
                        {
                            ExamTypeId = 1,
                            TypeName = "Theory"
                        },
                        new
                        {
                            ExamTypeId = 2,
                            TypeName = "Practical"
                        },
                        new
                        {
                            ExamTypeId = 3,
                            TypeName = "Project"
                        },
                        new
                        {
                            ExamTypeId = 4,
                            TypeName = "Presentation"
                        },
                        new
                        {
                            ExamTypeId = 5,
                            TypeName = "Case Study"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamTypeExam", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ExamTypeExamId")
                        .HasColumnType("int");

                    b.HasKey("ExamId", "ExamTypeId");

                    b.HasIndex("ExamTypeId");

                    b.ToTable("ExamTypeExams");

                    b.HasData(
                        new
                        {
                            ExamId = 1,
                            ExamTypeId = 1,
                            ExamTypeExamId = 1
                        },
                        new
                        {
                            ExamId = 2,
                            ExamTypeId = 2,
                            ExamTypeExamId = 2
                        },
                        new
                        {
                            ExamId = 3,
                            ExamTypeId = 3,
                            ExamTypeExamId = 3
                        },
                        new
                        {
                            ExamId = 4,
                            ExamTypeId = 4,
                            ExamTypeExamId = 4
                        },
                        new
                        {
                            ExamId = 5,
                            ExamTypeId = 5,
                            ExamTypeExamId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("JoinDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            ManagerId = 1,
                            Address = "123 Main Street",
                            Email = "john.manager@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(1286),
                            ManagerName = "John Manager",
                            Phone = "123-456-7890",
                            Picture = "manager1.jpg"
                        },
                        new
                        {
                            ManagerId = 2,
                            Address = "456 Broad Avenue",
                            Email = "alice.admin@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(1322),
                            ManagerName = "Alice Administrator",
                            Phone = "987-654-3210",
                            Picture = "manager2.jpg"
                        },
                        new
                        {
                            ManagerId = 3,
                            Address = "789 Pine Lane",
                            Email = "bob.lead@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(1330),
                            ManagerName = "Bob Team Lead",
                            Phone = "555-123-4567",
                            Picture = "manager3.jpg"
                        },
                        new
                        {
                            ManagerId = 4,
                            Address = "890 Oak Street",
                            Email = "eva.coordinator@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(1334),
                            ManagerName = "Eva Coordinator",
                            Phone = "111-222-3333",
                            Picture = "manager4.jpg"
                        },
                        new
                        {
                            ManagerId = 5,
                            Address = "567 Elm Road",
                            Email = "chris.supervisor@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(1341),
                            ManagerName = "Chris Supervisor",
                            Phone = "444-555-6666",
                            Picture = "manager5.jpg"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.MedicalAdvisor", b =>
                {
                    b.Property<int>("MedicalAdvisorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalAdvisorId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("JoinDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("MedicalAdvisorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MedicalAdvisorId");

                    b.ToTable("MedicalAdvisors");

                    b.HasData(
                        new
                        {
                            MedicalAdvisorId = 1,
                            Address = "789 Elm Street",
                            Designation = "Team Doctor",
                            Email = "dr.johnson@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2701),
                            MedicalAdvisorName = "Dr. Johnson",
                            Phone = "555-123-4567",
                            Picture = "advisor1.jpg"
                        },
                        new
                        {
                            MedicalAdvisorId = 2,
                            Address = "456 Maple Avenue",
                            Designation = "Sports Physio",
                            Email = "dr.smith@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2712),
                            MedicalAdvisorName = "Dr. Smith",
                            Phone = "555-987-6543",
                            Picture = "advisor2.jpg"
                        },
                        new
                        {
                            MedicalAdvisorId = 3,
                            Address = "123 Oak Street",
                            Designation = "Nutritionist",
                            Email = "dr.anderson@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2716),
                            MedicalAdvisorName = "Dr. Anderson",
                            Phone = "555-345-6789",
                            Picture = "advisor3.jpg"
                        },
                        new
                        {
                            MedicalAdvisorId = 4,
                            Address = "789 Pine Avenue",
                            Designation = "Psychologist",
                            Email = "dr.williams@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2720),
                            MedicalAdvisorName = "Dr. Williams",
                            Phone = "555-678-9012",
                            Picture = "advisor4.jpg"
                        },
                        new
                        {
                            MedicalAdvisorId = 5,
                            Address = "101 Cedar Lane",
                            Designation = "Rehab Specialist",
                            Email = "dr.davis@example.com",
                            JoinDate = new DateTime(2024, 1, 20, 23, 21, 10, 563, DateTimeKind.Local).AddTicks(2724),
                            MedicalAdvisorName = "Dr. Davis",
                            Phone = "555-234-5678",
                            Picture = "advisor5.jpg"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.MedicalAdvisorSpecialization", b =>
                {
                    b.Property<int>("MedicalAdvisorId")
                        .HasColumnType("int");

                    b.Property<int>("AdvisorSpecializationId")
                        .HasColumnType("int");

                    b.HasKey("MedicalAdvisorId", "AdvisorSpecializationId");

                    b.HasIndex("AdvisorSpecializationId");

                    b.ToTable("MedicalAdvisorSpecializations");

                    b.HasData(
                        new
                        {
                            MedicalAdvisorId = 1,
                            AdvisorSpecializationId = 2
                        },
                        new
                        {
                            MedicalAdvisorId = 1,
                            AdvisorSpecializationId = 3
                        },
                        new
                        {
                            MedicalAdvisorId = 1,
                            AdvisorSpecializationId = 4
                        },
                        new
                        {
                            MedicalAdvisorId = 1,
                            AdvisorSpecializationId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BirthDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Address = "456 Player Street",
                            BirthDate = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 2,
                            Email = "player.one@example.com",
                            Phone = "888-777-6666",
                            Picture = "player1.jpg",
                            PlayerName = "Player One",
                            RegistrationNumber = 1001,
                            TeamId = 2
                        },
                        new
                        {
                            PlayerId = 2,
                            Address = "456 Player Street",
                            BirthDate = new DateTime(1992, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 2,
                            Email = "player.two@example.com",
                            Phone = "888-777-6666",
                            Picture = "player2.jpg",
                            PlayerName = "Player Two",
                            RegistrationNumber = 1002,
                            TeamId = 2
                        },
                        new
                        {
                            PlayerId = 3,
                            Address = "789 Player Lane",
                            BirthDate = new DateTime(1995, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 3,
                            Email = "player.three@example.com",
                            Phone = "777-666-5555",
                            Picture = "player3.jpg",
                            PlayerName = "Player Three",
                            RegistrationNumber = 1003,
                            TeamId = 3
                        },
                        new
                        {
                            PlayerId = 4,
                            Address = "101 Player Avenue",
                            BirthDate = new DateTime(1988, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 4,
                            Email = "player.four@example.com",
                            Phone = "666-555-4444",
                            Picture = "player4.jpg",
                            PlayerName = "Player Four",
                            RegistrationNumber = 1004,
                            TeamId = 4
                        },
                        new
                        {
                            PlayerId = 5,
                            Address = "202 Player Road",
                            BirthDate = new DateTime(1993, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 5,
                            Email = "player.five@example.com",
                            Phone = "555-444-3333",
                            Picture = "player5.jpg",
                            PlayerName = "Player Five",
                            RegistrationNumber = 1005,
                            TeamId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerCoach", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "CoachId");

                    b.HasIndex("CoachId");

                    b.ToTable("PlayerCoaches");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            CoachId = 1
                        },
                        new
                        {
                            PlayerId = 2,
                            CoachId = 2
                        },
                        new
                        {
                            PlayerId = 3,
                            CoachId = 3
                        },
                        new
                        {
                            PlayerId = 4,
                            CoachId = 4
                        },
                        new
                        {
                            PlayerId = 5,
                            CoachId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerCourse", b =>
                {
                    b.Property<int>("PlayerCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerCourseId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("PlayerCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCourses");

                    b.HasData(
                        new
                        {
                            PlayerCourseId = 1,
                            CourseId = 1,
                            PlayerId = 1
                        },
                        new
                        {
                            PlayerCourseId = 2,
                            CourseId = 2,
                            PlayerId = 2
                        },
                        new
                        {
                            PlayerCourseId = 3,
                            CourseId = 3,
                            PlayerId = 3
                        },
                        new
                        {
                            PlayerCourseId = 4,
                            CourseId = 4,
                            PlayerId = 4
                        },
                        new
                        {
                            PlayerCourseId = 5,
                            CourseId = 5,
                            PlayerId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerExam", b =>
                {
                    b.Property<int>("PlayerExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerExamId"));

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("PlayerExamId");

                    b.HasIndex("ExamId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerExams");

                    b.HasData(
                        new
                        {
                            PlayerExamId = 1,
                            ExamId = 1,
                            PlayerId = 1
                        },
                        new
                        {
                            PlayerExamId = 2,
                            ExamId = 2,
                            PlayerId = 2
                        },
                        new
                        {
                            PlayerExamId = 3,
                            ExamId = 3,
                            PlayerId = 3
                        },
                        new
                        {
                            PlayerExamId = 4,
                            ExamId = 4,
                            PlayerId = 4
                        },
                        new
                        {
                            PlayerExamId = 5,
                            ExamId = 5,
                            PlayerId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerRole", b =>
                {
                    b.Property<int>("PlayerRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerRoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlayerRoleId");

                    b.ToTable("PlayerRoles");

                    b.HasData(
                        new
                        {
                            PlayerRoleId = 1,
                            RoleName = "Team Player"
                        },
                        new
                        {
                            PlayerRoleId = 2,
                            RoleName = "Captain"
                        },
                        new
                        {
                            PlayerRoleId = 3,
                            RoleName = "All-Rounder"
                        },
                        new
                        {
                            PlayerRoleId = 4,
                            RoleName = "Batsman"
                        },
                        new
                        {
                            PlayerRoleId = 5,
                            RoleName = "Bowler"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerRolePlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerRoleId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "PlayerRoleId");

                    b.HasIndex("PlayerRoleId");

                    b.ToTable("PlayerRolePlayers");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            PlayerRoleId = 1
                        },
                        new
                        {
                            PlayerId = 2,
                            PlayerRoleId = 2
                        },
                        new
                        {
                            PlayerId = 3,
                            PlayerRoleId = 3
                        },
                        new
                        {
                            PlayerId = 4,
                            PlayerRoleId = 4
                        },
                        new
                        {
                            PlayerId = 5,
                            PlayerRoleId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerSport", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "SportId");

                    b.HasIndex("SportId");

                    b.ToTable("PlayerSports");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            SportId = 1
                        },
                        new
                        {
                            PlayerId = 1,
                            SportId = 2
                        },
                        new
                        {
                            PlayerId = 2,
                            SportId = 1
                        },
                        new
                        {
                            PlayerId = 2,
                            SportId = 2
                        },
                        new
                        {
                            PlayerId = 3,
                            SportId = 1
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerStateDetail", b =>
                {
                    b.Property<int>("PlayerStateDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerStateDetailId"));

                    b.Property<double?>("Average")
                        .HasColumnType("float");

                    b.Property<int?>("Balls")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Ducks")
                        .HasColumnType("int");

                    b.Property<double?>("Economy")
                        .HasColumnType("float");

                    b.Property<int?>("Fifty")
                        .HasColumnType("int");

                    b.Property<int?>("Fours")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Highest")
                        .HasColumnType("int");

                    b.Property<int?>("Hundred")
                        .HasColumnType("int");

                    b.Property<int?>("Innings")
                        .HasColumnType("int");

                    b.Property<int?>("Maidens")
                        .HasColumnType("int");

                    b.Property<int?>("Marks")
                        .HasColumnType("int");

                    b.Property<int?>("Matches")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerStatisticId")
                        .HasColumnType("int");

                    b.Property<int?>("Runs")
                        .HasColumnType("int");

                    b.Property<int?>("Sixs")
                        .HasColumnType("int");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("int");

                    b.Property<int?>("Wicket")
                        .HasColumnType("int");

                    b.HasKey("PlayerStateDetailId");

                    b.HasIndex("PlayerStatisticId");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("PlayerStateDetails");

                    b.HasData(
                        new
                        {
                            PlayerStateDetailId = 1,
                            Average = 28.0,
                            Balls = 200,
                            Comment = "Excellent performance in the training session",
                            Ducks = 1,
                            Economy = 3.0,
                            Fifty = 1,
                            Fours = 40,
                            Grade = "A",
                            Highest = 80,
                            Hundred = 0,
                            Innings = 8,
                            Maidens = 1,
                            Marks = 85,
                            Matches = 10,
                            Runs = 250,
                            Sixs = 10,
                            TrainingSessionId = 1,
                            Wicket = 5
                        },
                        new
                        {
                            PlayerStateDetailId = 2,
                            Average = 30.0,
                            Balls = 250,
                            Comment = "Outstanding performance in the training session",
                            Ducks = 0,
                            Economy = 3.5,
                            Fifty = 2,
                            Fours = 50,
                            Grade = "A+",
                            Highest = 100,
                            Hundred = 1,
                            Innings = 10,
                            Maidens = 2,
                            Marks = 90,
                            Matches = 12,
                            Runs = 300,
                            Sixs = 12,
                            TrainingSessionId = 2,
                            Wicket = 8
                        },
                        new
                        {
                            PlayerStateDetailId = 3,
                            Average = 30.0,
                            Balls = 150,
                            Comment = "Good effort in the training session",
                            Ducks = 2,
                            Economy = 3.2000000000000002,
                            Fifty = 1,
                            Fours = 30,
                            Grade = "B+",
                            Highest = 90,
                            Hundred = 0,
                            Innings = 6,
                            Maidens = 0,
                            Marks = 78,
                            Matches = 8,
                            Runs = 180,
                            Sixs = 8,
                            TrainingSessionId = 3,
                            Wicket = 4
                        },
                        new
                        {
                            PlayerStateDetailId = 4,
                            Average = 32.0,
                            Balls = 300,
                            Comment = "Consistent performance in the training session",
                            Ducks = 1,
                            Economy = 3.7999999999999998,
                            Fifty = 3,
                            Fours = 60,
                            Grade = "A",
                            Highest = 120,
                            Hundred = 1,
                            Innings = 14,
                            Maidens = 1,
                            Marks = 88,
                            Matches = 15,
                            Runs = 400,
                            Sixs = 20,
                            TrainingSessionId = 4,
                            Wicket = 10
                        },
                        new
                        {
                            PlayerStateDetailId = 5,
                            Average = 40.0,
                            Balls = 200,
                            Comment = "Impressive performance in the training session",
                            Ducks = 0,
                            Economy = 4.0,
                            Fifty = 2,
                            Fours = 40,
                            Grade = "A+",
                            Highest = 110,
                            Hundred = 0,
                            Innings = 10,
                            Maidens = 2,
                            Marks = 92,
                            Matches = 12,
                            Runs = 300,
                            Sixs = 15,
                            TrainingSessionId = 5,
                            Wicket = 6
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerStatistic", b =>
                {
                    b.Property<int>("PlayerStatisticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerStatisticId"));

                    b.Property<double?>("Average")
                        .HasColumnType("float");

                    b.Property<int?>("Balls")
                        .HasColumnType("int");

                    b.Property<int?>("Ducks")
                        .HasColumnType("int");

                    b.Property<double?>("Economy")
                        .HasColumnType("float");

                    b.Property<int?>("Fifty")
                        .HasColumnType("int");

                    b.Property<int?>("Fours")
                        .HasColumnType("int");

                    b.Property<int?>("Highest")
                        .HasColumnType("int");

                    b.Property<int?>("Hundred")
                        .HasColumnType("int");

                    b.Property<int?>("Innings")
                        .HasColumnType("int");

                    b.Property<int?>("Maidens")
                        .HasColumnType("int");

                    b.Property<int?>("Matches")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("Runs")
                        .HasColumnType("int");

                    b.Property<int?>("Sixs")
                        .HasColumnType("int");

                    b.Property<int?>("Wicket")
                        .HasColumnType("int");

                    b.HasKey("PlayerStatisticId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerStatistics");

                    b.HasData(
                        new
                        {
                            PlayerStatisticId = 1,
                            Average = 27.0,
                            Balls = 400,
                            Ducks = 2,
                            Economy = 4.0,
                            Fifty = 2,
                            Fours = 60,
                            Highest = 120,
                            Hundred = 1,
                            Innings = 18,
                            Maidens = 2,
                            Matches = 20,
                            PlayerId = 1,
                            Runs = 500,
                            Sixs = 15,
                            Wicket = 10
                        },
                        new
                        {
                            PlayerStatisticId = 2,
                            Average = 30.0,
                            Balls = 450,
                            Ducks = 1,
                            Economy = 4.0,
                            Fifty = 3,
                            Fours = 75,
                            Highest = 150,
                            Hundred = 2,
                            Innings = 22,
                            Maidens = 3,
                            Matches = 25,
                            PlayerId = 2,
                            Runs = 600,
                            Sixs = 20,
                            Wicket = 15
                        },
                        new
                        {
                            PlayerStatisticId = 3,
                            Average = 25.0,
                            Balls = 250,
                            Ducks = 3,
                            Economy = 3.5,
                            Fifty = 1,
                            Fours = 40,
                            Highest = 100,
                            Hundred = 0,
                            Innings = 12,
                            Maidens = 1,
                            Matches = 15,
                            PlayerId = 3,
                            Runs = 300,
                            Sixs = 10,
                            Wicket = 5
                        },
                        new
                        {
                            PlayerStatisticId = 4,
                            Average = 32.0,
                            Balls = 600,
                            Ducks = 0,
                            Economy = 4.5,
                            Fifty = 4,
                            Fours = 90,
                            Highest = 180,
                            Hundred = 3,
                            Innings = 28,
                            Maidens = 4,
                            Matches = 30,
                            PlayerId = 4,
                            Runs = 800,
                            Sixs = 25,
                            Wicket = 20
                        },
                        new
                        {
                            PlayerStatisticId = 5,
                            Average = 28.0,
                            Balls = 350,
                            Ducks = 1,
                            Economy = 4.2000000000000002,
                            Fifty = 2,
                            Fours = 70,
                            Highest = 130,
                            Hundred = 1,
                            Innings = 16,
                            Maidens = 2,
                            Matches = 18,
                            PlayerId = 5,
                            Runs = 450,
                            Sixs = 18,
                            Wicket = 12
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerTrainingSession", b =>
                {
                    b.Property<int>("PlayerTrainingSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerTrainingSessionId"));

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingSessionId")
                        .HasColumnType("int");

                    b.HasKey("PlayerTrainingSessionId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("PlayerTrainingSessions");

                    b.HasData(
                        new
                        {
                            PlayerTrainingSessionId = 1,
                            PlayerId = 1,
                            TrainingSessionId = 1
                        },
                        new
                        {
                            PlayerTrainingSessionId = 2,
                            PlayerId = 2,
                            TrainingSessionId = 2
                        },
                        new
                        {
                            PlayerTrainingSessionId = 3,
                            PlayerId = 3,
                            TrainingSessionId = 3
                        },
                        new
                        {
                            PlayerTrainingSessionId = 4,
                            PlayerId = 4,
                            TrainingSessionId = 4
                        },
                        new
                        {
                            PlayerTrainingSessionId = 5,
                            PlayerId = 5,
                            TrainingSessionId = 5
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.SelectedPlayer", b =>
                {
                    b.Property<int>("SelectedPlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelectedPlayerId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("SelectedPlayerId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("EventId");

                    b.ToTable("SelectedPlayers");

                    b.HasData(
                        new
                        {
                            SelectedPlayerId = 1,
                            ApplicantId = 1,
                            EventId = 1
                        },
                        new
                        {
                            SelectedPlayerId = 2,
                            ApplicantId = 3,
                            EventId = 2
                        },
                        new
                        {
                            SelectedPlayerId = 3,
                            ApplicantId = 4,
                            EventId = 3
                        },
                        new
                        {
                            SelectedPlayerId = 4,
                            ApplicantId = 1,
                            EventId = 1
                        },
                        new
                        {
                            SelectedPlayerId = 5,
                            ApplicantId = 3,
                            EventId = 4
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.SelectionPanel", b =>
                {
                    b.Property<int>("SelectionPanelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelectionPanelId"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("MedicalAdvisorId")
                        .HasColumnType("int");

                    b.Property<string>("SelectionPanelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SelectionPanelId");

                    b.HasIndex("CoachId");

                    b.HasIndex("MedicalAdvisorId");

                    b.ToTable("SelectionPanels");

                    b.HasData(
                        new
                        {
                            SelectionPanelId = 1,
                            CoachId = 1,
                            MedicalAdvisorId = 1,
                            SelectionPanelName = "Selection Committee 1"
                        },
                        new
                        {
                            SelectionPanelId = 2,
                            CoachId = 2,
                            MedicalAdvisorId = 2,
                            SelectionPanelName = "Selection Committee 2"
                        },
                        new
                        {
                            SelectionPanelId = 3,
                            CoachId = 3,
                            MedicalAdvisorId = 3,
                            SelectionPanelName = "Selection Committee 3"
                        },
                        new
                        {
                            SelectionPanelId = 4,
                            CoachId = 4,
                            MedicalAdvisorId = 4,
                            SelectionPanelName = "Selection Committee 4"
                        },
                        new
                        {
                            SelectionPanelId = 5,
                            CoachId = 5,
                            MedicalAdvisorId = 5,
                            SelectionPanelName = "Selection Committee 5"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportId"));

                    b.Property<string>("SportsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SportId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportId = 1,
                            SportsName = "Cricket"
                        },
                        new
                        {
                            SportId = 2,
                            SportsName = "Football"
                        },
                        new
                        {
                            SportId = 3,
                            SportsName = "Basketball"
                        },
                        new
                        {
                            SportId = 4,
                            SportsName = "Volleyball"
                        },
                        new
                        {
                            SportId = 5,
                            SportsName = "Tennis"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Captain")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<string>("TeamLogo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeamId");

                    b.HasIndex("SportId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 2,
                            Captain = "Player Captain 2",
                            SportId = 2,
                            TeamLogo = "TeamLogo1.jpg",
                            TeamName = "Team B"
                        },
                        new
                        {
                            TeamId = 3,
                            Captain = "Player Captain 3",
                            SportId = 3,
                            TeamLogo = "TeamLogo2.jpg",
                            TeamName = "Team C"
                        },
                        new
                        {
                            TeamId = 4,
                            Captain = "Player Captain 4",
                            SportId = 4,
                            TeamLogo = "TeamLogo3.jpg",
                            TeamName = "Team D"
                        },
                        new
                        {
                            TeamId = 5,
                            Captain = "Player Captain 5",
                            SportId = 5,
                            TeamLogo = "TeamLogo4.jpg",
                            TeamName = "Team E"
                        },
                        new
                        {
                            TeamId = 6,
                            Captain = "Player Captain 6",
                            SportId = 1,
                            TeamLogo = "TeamLogo5.jpg",
                            TeamName = "Team F"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.TrainingSession", b =>
                {
                    b.Property<int>("TrainingSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingSessionId"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("SessionTime")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TrainingSessionId");

                    b.HasIndex("CoachId");

                    b.ToTable("TrainingSessions");

                    b.HasData(
                        new
                        {
                            TrainingSessionId = 1,
                            CoachId = 1,
                            Description = "Training session to prepare for the season",
                            SessionTime = new DateTime(2024, 1, 21, 13, 21, 10, 563, DateTimeKind.Local).AddTicks(4271),
                            Title = "Pre-Season Training"
                        },
                        new
                        {
                            TrainingSessionId = 2,
                            CoachId = 2,
                            Description = "Focus on agility and overall conditioning",
                            SessionTime = new DateTime(2024, 2, 21, 15, 21, 10, 563, DateTimeKind.Local).AddTicks(4281),
                            Title = "Agility and Conditioning"
                        },
                        new
                        {
                            TrainingSessionId = 3,
                            CoachId = 3,
                            Description = "Drills to improve tactical understanding",
                            SessionTime = new DateTime(2024, 3, 21, 14, 21, 10, 563, DateTimeKind.Local).AddTicks(4290),
                            Title = "Tactical Drills"
                        },
                        new
                        {
                            TrainingSessionId = 4,
                            CoachId = 4,
                            Description = "Specialized training for speed and power",
                            SessionTime = new DateTime(2024, 4, 21, 13, 21, 10, 563, DateTimeKind.Local).AddTicks(4296),
                            Title = "Speed and Power Training"
                        },
                        new
                        {
                            TrainingSessionId = 5,
                            CoachId = 1,
                            Description = "Focus on player recovery and injury prevention",
                            SessionTime = new DateTime(2024, 5, 21, 16, 21, 10, 563, DateTimeKind.Local).AddTicks(4301),
                            Title = "Recovery Session"
                        });
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Applicant", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Attendance", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.TrainingSession", "TrainingSession")
                        .WithMany("Attendances")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Coach", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.CoachType", "CoachType")
                        .WithMany("Coaches")
                        .HasForeignKey("CoachTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoachType");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachSpecialization", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Coach", "Coach")
                        .WithMany("CoachSpecializations")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachSport", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Coach", "Coach")
                        .WithMany("CoachSports")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Sport", "Sport")
                        .WithMany("CoachSports")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachTeam", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Coach", "Coach")
                        .WithMany("CoachTeams")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Team", "Team")
                        .WithMany("CoachTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CricketFormat", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Equipment", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.TrainingSession", "TrainingSession")
                        .WithMany("Equipments")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Event", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Manager", "Manager")
                        .WithMany("Events")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.SelectionPanel", "SelectionPanel")
                        .WithMany("Events")
                        .HasForeignKey("SelectionPanelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("SelectionPanel");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Exam", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.ExamResult", "ExamResult")
                        .WithMany("Exams")
                        .HasForeignKey("ExamResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamResult");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamResult", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.PlayerStateDetail", null)
                        .WithMany("ExamResult")
                        .HasForeignKey("PlayerStateDetailId");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamTypeExam", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Exam", "Exam")
                        .WithMany("ExamTypeExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.ExamType", "ExamType")
                        .WithMany("ExamTypeExams")
                        .HasForeignKey("ExamTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("ExamType");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.MedicalAdvisorSpecialization", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.AdvisorSpecialization", "AdvisorSpecialization")
                        .WithMany("MedicalAdvisorSpecializations")
                        .HasForeignKey("AdvisorSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.MedicalAdvisor", "MedicalAdvisor")
                        .WithMany("MedicalAdvisorSpecializations")
                        .HasForeignKey("MedicalAdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvisorSpecialization");

                    b.Navigation("MedicalAdvisor");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Player", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Category", "Category")
                        .WithMany("Players")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerCoach", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany("PlayerCoaches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerCourse", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Course", "Course")
                        .WithMany("PlayerCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany("PlayerCourses")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerExam", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Exam", "Exam")
                        .WithMany("PlayerExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany("PlayerExams")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerRolePlayer", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany("PlayerRolePlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.PlayerRole", "PlayerRole")
                        .WithMany("PlayerRolePlayers")
                        .HasForeignKey("PlayerRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("PlayerRole");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerSport", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany("PlayerSports")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Sport", "Sport")
                        .WithMany("PlayerSports")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerStateDetail", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.PlayerStatistic", null)
                        .WithMany("PlayerStateDetails")
                        .HasForeignKey("PlayerStatisticId");

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.TrainingSession", "TrainingSession")
                        .WithMany("StatDetails")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerStatistic", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany("PlayerStatistics")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerTrainingSession", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.TrainingSession", "TrainingSession")
                        .WithMany("PlayerTrainingSessions")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.SelectedPlayer", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.SelectionPanel", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Coach", "Coach")
                        .WithMany("SelectionPanels")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.MedicalAdvisor", "MedicalAdvisor")
                        .WithMany()
                        .HasForeignKey("MedicalAdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("MedicalAdvisor");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Team", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Sport", "Sport")
                        .WithMany("Teams")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.TrainingSession", b =>
                {
                    b.HasOne("SportAcademy.BlazorApp.Shared.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.AdvisorSpecialization", b =>
                {
                    b.Navigation("MedicalAdvisorSpecializations");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Category", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Coach", b =>
                {
                    b.Navigation("CoachSpecializations");

                    b.Navigation("CoachSports");

                    b.Navigation("CoachTeams");

                    b.Navigation("SelectionPanels");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.CoachType", b =>
                {
                    b.Navigation("Coaches");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Course", b =>
                {
                    b.Navigation("PlayerCourses");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Exam", b =>
                {
                    b.Navigation("ExamTypeExams");

                    b.Navigation("PlayerExams");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamResult", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.ExamType", b =>
                {
                    b.Navigation("ExamTypeExams");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Manager", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.MedicalAdvisor", b =>
                {
                    b.Navigation("MedicalAdvisorSpecializations");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Player", b =>
                {
                    b.Navigation("PlayerCoaches");

                    b.Navigation("PlayerCourses");

                    b.Navigation("PlayerExams");

                    b.Navigation("PlayerRolePlayers");

                    b.Navigation("PlayerSports");

                    b.Navigation("PlayerStatistics");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerRole", b =>
                {
                    b.Navigation("PlayerRolePlayers");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerStateDetail", b =>
                {
                    b.Navigation("ExamResult");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.PlayerStatistic", b =>
                {
                    b.Navigation("PlayerStateDetails");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.SelectionPanel", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Sport", b =>
                {
                    b.Navigation("CoachSports");

                    b.Navigation("PlayerSports");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.Team", b =>
                {
                    b.Navigation("CoachTeams");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("SportAcademy.BlazorApp.Shared.Models.TrainingSession", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Equipments");

                    b.Navigation("PlayerTrainingSessions");

                    b.Navigation("StatDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
